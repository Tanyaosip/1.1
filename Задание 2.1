<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8" />
    <title>Осипенко</title>
    <script>
    var canvas = document.getElementById("canvas");
var ctx = canvas.getContext("2d");
canvas.height = this.H;
canvas.width = this.W;
function f(x) {
  return x * x - 9;
}
class Graphics1d {
  constructor() {
    this.xmin = -10.0;
    this.xmax = 10.0;
    this.ymin = -10.0;
    this.ymax = 10.0;
    this.W = 500;
    this.H = 500;
    this.y = new Float64Array(this.W);
  }

  evaluate() {
    let i = 0;
    let X;
    let L = this.W;
    let l = this.xmax - this.xmin;
    let dx = l / this.W;
    let S = L / l;
    for (let x = this.xmin; x <= this.xmax; x += dx) {
      this.y[i] = f(x);
      i++;
    }
  }

  draw() {
    var canvas = document.getElementById("canvas");
    var ctx = canvas.getContext("2d");
    canvas.height = this.H;
    canvas.width = this.W;
    ctx.fillStyle = "#BCBABE";
    ctx.fillRect(0, 0, 500, 500);

    //оси координат
    ctx.beginPath();
    ctx.lineWidth = 2;
    ctx.strokeStyle = "green";
    ctx.moveTo(0, this.H / 2);
    ctx.lineTo(this.W, this.H / 2);
    ctx.stroke();
    ctx.beginPath();
    ctx.moveTo(this.W / 2, 0);
    ctx.lineTo(this.W / 2, this.H);
    ctx.stroke();

    //координатная сетка
    let w = 0;
    const k = this.W / (this.xmax * 2);
    for (let i = 0; i < this.xmax * 2; i++) {
      ctx.beginPath();
      ctx.lineWidth = 0.5;
      ctx.moveTo(w, 0);
      ctx.lineTo(w, this.H);
      w += k;
      ctx.stroke();
    }
    let h = 0;
    const k1 = this.H / (this.ymax * 2);
    for (let i = 0; i < this.ymax * 2; i++) {
      ctx.beginPath();
      ctx.lineWidth = 0.5;
      ctx.moveTo(0, h);
      ctx.lineTo(this.W, h);
      h += k1;
      ctx.stroke();
    }

    let i = 0;
    let Lx = this.W;
    let lx = this.xmax - this.xmin;
    let Ly = this.H;
    let ly = this.ymax - this.ymin;
    let dx = lx / this.W;
    let Sx = Lx / lx;
    let Sy = Ly / ly;
    let X = (0 - this.xmin) * Sx + 0;
    let Y = -(0 - this.ymin) * Sy + this.H;

    //функция
    ctx.beginPath();
    ctx.strokeStyle = "red";
    ctx.lineWidth = 2;
    Y = -(this.y[0] - this.ymin) * Sy + this.H;

    for (let x = this.xmin; x <= this.xmax; x += dx) {
      X = (x - this.xmin) * Sx;
      Y = -(this.y[i] - this.ymin) * Sy + this.H;
      ctx.lineTo(X, Y);

      i++;
    }

    //текст минимума и максимума
    ctx.font = "20px Georgia";
    ctx.fillStyle = "black";
    ctx.fillText("xmin=", 10, this.H - 40);
    ctx.fillText("ymin=", 10, this.H - 20);
    ctx.fillText("xmax=", this.W - 100, 20);
    ctx.fillText("ymax=", this.W - 100, 40);
    ctx.fillText(this.xmin, 70, this.H - 40);
    ctx.fillText(this.ymin, 70, this.H - 20);
    ctx.fillText(this.xmax, this.W - 30, 20);
    ctx.fillText(this.ymax, this.W - 30, 40);
    ctx.stroke();

    //нули
    i = 0;
    ctx.beginPath();
    for (let x = this.xmin; x <= this.xmax; x += dx) {
      X = (x - this.xmin) * Sx;
      Y = -(this.y[i] - this.ymin) * Sy + this.H;
      if (
        (x >= -0.002 && x <= 0.002) ||
        (this.y[i] >= -0.002 && this.y[i] <= 0.002)
      ) {
        ctx.beginPath();
        ctx.arc(X, Y, 5, 0, 2 * Math.PI);
        ctx.fillStyle = "red";
        ctx.fill();
      }
      i++;
    }
    i = 0;
    ctx.beginPath();
    ctx.moveTo(this.W, 0);
    ctx.lineTo(0, 0);
    for (let x = this.xmin; x <= this.xmax; x += dx) {
      X = (x - this.xmin) * Sx;
      Y = -(this.y[i] - this.ymin) * Sy + this.H;
      ctx.lineTo(X, Y);
      if (this.y[i] > 0) {
        ctx.lineTo(X, Y);
      }
      i++;
    }
    ctx.fillStyle = "rgba(100,150,185,0.5)";
    ctx.fill();
  }

  autodraw() {
    let min = 999999;
    let max = -999999;
    for (let i = 0; i <= this.y.length; i++) {
      if (min > this.y[i]) {
        min = this.y[i];
      }
      if (max < this.y[i]) {
        max = this.y[i];
      }
      i++;
    }
    this.ymin = min;
    this.ymax = max;
  }
}
let graphic = new Graphics1d();
graphic.evaluate();
//graphic.autodraw();
graphic.draw();

    </script>
  </head>
  <body>
    <h1>Осипенко Татьяна Дмитриевна</h1>
    <canvas id="canvas"></canvas>
  </body>
</html>
